@page "/student/MyCourse"
@rendermode InteractiveWebAssembly

@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs
@using LMS.Shared.DTOs.Course
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations

@if (course != null)
{
    <h3>Course : @course.Name</h3>
@foreach (var module in course.Modules)
{
    <table class="table">
        <thead>
            <tr>
                <th>@module.Name</th>
                <th></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var activity in module.Activities)
            {
                <tr>
                    <td>@activity.Name</td>
                    <td>@activity.Description</td>
                    <td>@activity.StartTime.ToString("yyyy-MM-dd")</td>
                    <td>@activity.EndTime.ToString("yyyy-MM-dd")</td>
                </tr>
            }

        </tbody>
    </table>
}
}
@code {

    [Inject]
    private IApiService _apiService { get; set; } = default!;

    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    private List<CourseDto>? courses;
    private CourseDto? course;
   
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            try
            {
                if (_apiService != null)
                {
                    // courses = (await _apiService.CallApiAsync<IEnumerable<CourseDto>>("Course/courselist"))?.ToList() ?? [];
                    course = await _apiService.CallApiGetAsync<CourseDto>("courseForUser");
                    // course = await _apiService.CallApiGetAsync<CourseDto>($"Course/{CourseId}");
                    //  <CourseDto>($"Course/{CourseId}?includeModules=true");
                    StateHasChanged(); // Trigger UI update after fetching data
                }
                else
                {
                    Console.WriteLine("ApiService is not initialized");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error while fetching courses: {ex.Message}");
            }
        }


    }
}
