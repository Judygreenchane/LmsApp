@implements IDisposable
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Lexicon LMS</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-2">
            <NavLink class="nav-link" href="account/login" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
       

        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-2">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-2">
                    <NavLink class="nav-link" href="account/login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>

            <Authorized>
                @if (context.User.IsInRole("Admin"))
                {
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="#">
                            <span class="i bi-person-badge-nav-menu" aria-hidden="true"></span> Manage Users
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="#">
                            <span class="i bi-person-badge-nav-menu" aria-hidden="true"></span> Manage Courses
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="courselist" Match="NavLinkMatch.All">
                            <span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> Course List
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="createcourse" Match="NavLinkMatch.All">
                            <span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> Add Course 
                        </NavLink>
                    </div>
                }

                @if (context.User.IsInRole("Teacher"))
                {
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="teacher/courses">
                            <span class="bi bi-journal-text-nav-menu" aria-hidden="true"></span> My Courses
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="teacher/modules">
                            <span class="bi bi-collection-nav-menu" aria-hidden="true"></span> Modules
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="teacher/assignments">
                            <span class="bi bi-file-earmark-text-nav-menu" aria-hidden="true"></span> Assignments
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="teacher/documents">
                            <span class="bi bi-file-earmark-fill-nav-menu" aria-hidden="true"></span> Documents
                        </NavLink>
                    </div>
                }

                @if (context.User.IsInRole("Student"))
                {
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="student/MyCourse">
                            <span class="bi bi-journal-nav-menu" aria-hidden="true"></span> My Course
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="student/assignments">
                            <span class="bi bi-clipboard-check-nav-menu" aria-hidden="true"></span> Assignments
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="student/schedule">
                            <span class="bi bi-calendar3-nav-menu" aria-hidden="true"></span> Schedule
                        </NavLink>
                    </div>
                    <div class="nav-item px-2">
                        <NavLink class="nav-link" href="student/documents">
                            <span class="bi bi-file-text-nav-menu" aria-hidden="true"></span> Course Documents
                        </NavLink>
                    </div>
                }

                <div class="nav-item px-2">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>

                <div class="nav-item px-2">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}